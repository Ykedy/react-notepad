{"version":3,"sources":["store/constants.js","store/reducer.js","store/index.js","pages/search/style.js","store/actionCreater.js","components/write/style.js","utl/tools.js","components/write/index.js","pages/search/index.js","components/titleList/style.js","components/titleList/index.js","pages/notes/index.js","pages/stars/index.js","pages/writeBar/style.js","pages/writeBar/index.js","router/index.js","components/header/style.js","components/header/index.js","App.js","index.js"],"names":["ADD_NOTE","CHANGE_NOTE","defaultState","notes","reducer","state","action","type","actionType","addNote","changeNote","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","SearchWrapper","styled","div","ChildTitleWrapper","NoResultWrapper","props","noResult","note","WriteBarWrapper","id","dataFrom","title","content","date","result","isStar","getDate","Date","year","getFullYear","month","getMonth","day","memo","data","areaRef","useRef","dispatch","useDispatch","allNotes","useSelector","shallowEqual","htmlString","editorState1","BraftEditor","createEditorState","value","ref","excludeControls","contentStyle","height","width","boxShadow","onSave","contentValue","current","getValue","toHTML","index","map","item","indexOf","changeNoteAction","useState","setData","setNoResult","titleState","setTitleState","showNotestate","setShowNoteState","inputRef","startItem","oldarr","delStartItem","className","placeholder","autoFocus","maxLength","onClick","split","join","re","RegExp","test","undefined","filter","search","showDetail","time","splice","deleteItem","TitleListWrapper","MaskWrapper","flagSave","NoWrapper","starPage","allData","newarr","SaveTitleState","setSaveTitleState","idState","setIdState","idarr","useEffect","newTitle","saveTitle","showSave","SaveWrapper","WriteBar","editorState","flag","handleChange","setState","submitContent","htmlContent","titleRef","setTimeout","componentWillUnmount","callback","this","e","onChange","React","Component","router","path","exact","render","to","component","Search","Notes","Stars","HeaderWrapper","App","renderRoutes","routes","ReactDom","document","getElementById"],"mappings":"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","file":"static/js/main.fc484288.chunk.js","sourcesContent":["export const ADD_NOTE = 'write/ADD_NOTE'\r\nexport const CHANGE_NOTE = 'write/CHANGE_NOTE'\r\n","import * as actionType from './constants'\r\nconst defaultState = {\r\n    notes: [],\r\n}\r\n\r\nfunction reducer(state = defaultState, action) {\r\n    switch (action.type) {\r\n        // 新增文章\r\n        case actionType.ADD_NOTE:\r\n            return { ...state, notes: [...state.notes, action.addNote] }\r\n        // 修改&删除&star\r\n        case actionType.CHANGE_NOTE:\r\n            return { ...state, notes: action.changeNote}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer","import { createStore, compose } from \"redux\";\r\nimport reducer from './reducer'\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers())\r\nexport default store","import styled from \"styled-components\";\r\n\r\nexport const SearchWrapper = styled.div`\r\n    background-color: #f5f5f5;\r\n    \r\n    .searchbox {\r\n        position: relative;\r\n        margin-top:20px;\r\n        margin-left:10px;\r\n        border:1px solid gray;\r\n        border-radius:50px;\r\n        width:300px;\r\n        height:36px;\r\n        background-color: #fff;\r\n        line-height:36px;\r\n\r\n        .searchicon {\r\n            position:absolute;\r\n            right: 14px;\r\n            font-size:18px;\r\n            color:gray;\r\n            cursor: pointer;\r\n        }\r\n        \r\n        input {\r\n            width:214px;\r\n            margin-left:16px;\r\n        }\r\n\r\n        .del {\r\n            position:absolute;\r\n            right: 40px;\r\n            top: 8px;\r\n            line-height:20px;\r\n            background-color:white;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n\r\n/* 结果栏 */\r\n    ul {\r\n        overflow-y:scroll;\r\n        height:calc(100vh - 70px);\r\n        margin-top:12px;\r\n    }\r\n    .item {\r\n        position: relative;\r\n        border-top: 1px solid #c2c2c2;\r\n        height: 60px;\r\n        padding:12px 80px 6px 24px;\r\n        cursor: pointer;\r\n        /* 笔记题目 */\r\n        .title{\r\n            width:200px;\r\n            font-size:18px;\r\n            white-space:nowrap;\r\n            overflow:hidden;\r\n            text-overflow: ellipsis;\r\n            margin: 0;\r\n            color:gray;\r\n        }\r\n\r\n        /* 日期 */\r\n        i {\r\n            display:block;\r\n            margin-top:20px;\r\n            margin-left:130px;\r\n            color:gray;\r\n        }\r\n    }\r\n\r\n    .item:hover {\r\n        background-color:#c2c2c2;\r\n        color:white;\r\n\r\n        .title, i {\r\n            color:white;\r\n        }\r\n    }\r\n\r\n    /* 点击后变色 */\r\n    .focusItem{\r\n        background-color: #c2c2c2;\r\n    }\r\n    .functionbtn {\r\n        position:absolute;\r\n        display:none;\r\n        top:24px;\r\n        right:30px;\r\n        /* 收藏按钮 */\r\n        .icon-shoucang,.icon-quxiaoshoucang,.icon-icon_write{\r\n            margin-right:4px;\r\n        }\r\n\r\n        .iconfont {\r\n            z-index:999;\r\n            font-size:24px;\r\n            text-align:center;\r\n            /* 提示删除和收藏 */\r\n            .star,.unstar,.deletenote {\r\n                display:none;\r\n                margin-top:5px;\r\n                position: absolute;\r\n                font-size:12px;\r\n                background-color: gray;\r\n                padding:2px;\r\n            }\r\n            .star::before{\r\n                left:10px;\r\n            }\r\n            .unstar::before{\r\n                left:20px;\r\n            }\r\n            .deletenote::before{\r\n                left:21px;\r\n            }\r\n            .star::before,.unstar::before,.deletenote::before{\r\n                content:'';\r\n                position:absolute;\r\n                top:-6px;\r\n                width: 0;\r\n                height: 0;\r\n                border-left: 5px solid transparent;\r\n                border-right: 5px solid transparent;\r\n                border-bottom:7px solid gray;\r\n            }\r\n            .star {\r\n                width:26px;\r\n                left:-2px\r\n            }\r\n            .unstar{\r\n                width:50px;\r\n                left:-12px;\r\n            }\r\n            .deletenote {\r\n                width:60px;\r\n                left:14px;\r\n            }\r\n        }\r\n        /* 收藏和删除路过时，变色 */\r\n        .iconfont:hover {\r\n            color:#fa8a00;\r\n            .star,.deletenote,.unstar {\r\n                color:white;\r\n            }\r\n        }\r\n        .icon-shoucang:hover .star,\r\n        .icon-quxiaoshoucang:hover .unstar,\r\n        .icon-icon_delete:hover .deletenote\r\n        {\r\n            display:block;\r\n        }\r\n\r\n    }\r\n\r\n    .item:hover .functionbtn {\r\n        display:float;\r\n    }\r\n    \r\n`\r\n\r\nexport const ChildTitleWrapper = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    .childTitle{\r\n        height: 40px;\r\n        text-align:center;\r\n        font-size:30px;\r\n        font-weight:500;\r\n        line-height:40px;\r\n        margin-top:8px;\r\n    }\r\n\r\n`\r\n\r\nexport const NoResultWrapper = styled.div`\r\n    display:${props => props.noResult};\r\n    position:absolute;\r\n    left: 160px;\r\n    top: 180px;\r\n    text-align:center;\r\n    i {\r\n        font-size:160px;\r\n        color: #f9b259;\r\n\r\n    }\r\n    div{\r\n        color:#f9b259;\r\n    }\r\n`","import * as actionType from './constants'\r\n// 新增\r\nexport const addNote = (note) => {\r\n    return (\r\n        {\r\n            type: actionType.ADD_NOTE,\r\n            addNote: note\r\n        }\r\n    )\r\n}\r\n// 修改标题 & 删除文章 & 修改内容 & 收藏内容\r\nexport const changeNote = (note) => {\r\n    return (\r\n        {\r\n            type: actionType.CHANGE_NOTE,\r\n            changeNote: note\r\n        }\r\n    )\r\n}","import styled from \"styled-components\";\r\nexport const WriteBarWrapper = styled.div`\r\n    .title{\r\n        height: 40px;\r\n        text-align:center;\r\n        font-size:30px;\r\n        font-weight:500;\r\n        line-height:40px;\r\n        margin-top:8px;\r\n        margin-left:10px;\r\n\r\n    }\r\n    .btn {\r\n        position:absolute;\r\n        background-color:red;\r\n        right: 0;\r\n        top: 0;\r\n    }\r\n\r\n    .bf-container{\r\n        height:calc(100vh - 60px - 20px);\r\n        overflow:hidden;\r\n    }\r\n    .article p{\r\n    min-height: 1em;\r\n    }\r\n    .save{\r\n        position:absolute;\r\n        top:50%;\r\n        left:50%;\r\n        width: 500px;\r\n        height: 50px;\r\n        background-color:yellow;\r\n        .title{\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n    }\r\n`","let id = 0;\r\nexport function dataFrom(title, content, date) {\r\n    let result = {\r\n        title,\r\n        content,\r\n        date,\r\n        isStar: 0,\r\n        id,\r\n    }\r\n    id++\r\n    return result\r\n}\r\n\r\nexport function getDate() {\r\n    let date = new Date()\r\n    let year = date.getFullYear()\r\n    let month = (date.getMonth() + 1) * 1\r\n    let day = date.getDate()\r\n    if (month >= 1 && month <= 9) {\r\n        month = '0' + month\r\n    }\r\n    if (day >= 1 && day <= 9) {\r\n        day = '0' + day\r\n    }\r\n    let nowDate = year + '-' + month + '-' + day\r\n    return nowDate\r\n}","import React, { memo, useRef } from 'react'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\n// 引入编辑器组件\r\nimport BraftEditor from 'braft-editor'\r\n// 引入编辑器样式\r\nimport 'braft-editor/dist/index.css'\r\nimport { WriteBarWrapper } from './style'\r\nimport {\r\n    getDate,\r\n} from '@/utl/tools'\r\nimport { changeNote as changeNoteAction } from '@/store/actionCreater'\r\nexport default memo(function Write(props) {\r\n    let { content, id } = props.data || ''\r\n    const areaRef = useRef()\r\n    const dispatch = useDispatch()\r\n    const allNotes = useSelector(state => state.notes, shallowEqual)\r\n    const excludeControls = ['media', 'link', 'text-indent', 'headings', 'superscript', 'fullscreen', 'subscript', 'clear', 'remove-styles']\r\n    const htmlString = content;\r\n    const editorState1 = BraftEditor.createEditorState(htmlString)\r\n\r\n    //保存\r\n    const submitContent = () => {\r\n        // 在编辑器获得焦点时按下ctrl+s会执行此方法\r\n        let contentValue = areaRef.current.getValue()\r\n        contentValue = contentValue.toHTML()\r\n        // 修改内容：找到id、content、日期，进行更新\r\n        let idarr = allNotes.map((item) => {\r\n            return item.id\r\n        })\r\n        let index = idarr.indexOf(id)\r\n        allNotes[index].content = contentValue\r\n        allNotes[index].date = getDate()\r\n\r\n    \r\n    dispatch(changeNoteAction(allNotes))\r\n}\r\n\r\n   \r\n        \r\n       \r\n        \r\n    \r\n\r\n    return (\r\n    <WriteBarWrapper >\r\n        {/* <h2 className=\"title\" >{title}</h2> */}\r\n        <BraftEditor value={editorState1}\r\n            ref={areaRef}\r\n            excludeControls={excludeControls}\r\n            contentStyle={{ height: 'calc(100vh - 60px - 48px)', width: 'calc(100vw - 360px - 73px)', boxShadow: 'inset 0 1px 3px rgba(0,0,0,.1)' }}\r\n            onSave={submitContent}\r\n            id=\"editor-with-code-highlighter\"\r\n        />\r\n    </WriteBarWrapper>\r\n\r\n\r\n)\r\n})\r\n\r\n\r\n\r\n","import React, { memo, useState, useRef } from 'react'\r\nimport { useDispatch,shallowEqual, useSelector } from 'react-redux'\r\nimport { SearchWrapper, ChildTitleWrapper, NoResultWrapper } from './style'\r\nimport { changeNote as changeNoteAction } from '@/store/actionCreater'\r\nimport Write from '@/components/write'\r\nexport default memo(function Search() {\r\n    const notes = useSelector(state => state.notes,shallowEqual)\r\n    const [data, setData] = useState([])\r\n    const [noResult, setNoResult] = useState('none')\r\n    const [titleState, setTitleState] = useState('')\r\n    const dispatch = useDispatch()\r\n    \r\n    let note = {\r\n        title: '',\r\n        content: '',\r\n        date: '',\r\n        isStar: 0,\r\n    }\r\n    const [showNotestate, setShowNoteState] = useState(note)\r\n    const inputRef = useRef('')\r\n    const delAll = () => {\r\n        // 点击x号，清空input内所有内容\r\n        inputRef.current.value = ''\r\n    }\r\n    // 搜索功能\r\n    const search = () => {\r\n        setNoResult('none')\r\n        setData([])\r\n        const separator = '.*?'\r\n        let value = inputRef.current.value\r\n        if (value === '') {\r\n            return\r\n        }\r\n        else {\r\n            let arr = value.split('')\r\n            let data = arr.join(separator)\r\n            var re = new RegExp(data);\r\n            let result = notes.map((item) => {\r\n                let it = {}\r\n                if (re.test(item.title) || re.test(item.content)) {\r\n                    it = item\r\n                }else{\r\n                    it = false\r\n                }\r\n                return it\r\n            })\r\n            result = result.filter((item) => {\r\n                let it = {}\r\n                if (item) {\r\n                    it = item\r\n                } else {\r\n                    it = false\r\n                }\r\n                return it\r\n            })\r\n            if (result[0] === undefined) {\r\n                setNoResult('block')\r\n            }\r\n            else {\r\n                setData(result)\r\n            }\r\n        }\r\n    }\r\n\r\n    // 点击每一项，显示详细内容\r\n    const showDetail = (item) => {\r\n        note = { ...item }\r\n        setShowNoteState(note)\r\n        setTitleState(item.title)\r\n\r\n    }\r\n    // 选择是【收藏】还是【取消收藏】\r\n    const selectStar = (id, isStar) => {\r\n\r\n        // 如果收藏了，显示取消收藏icon\r\n        if (isStar === 1) {\r\n            return (\r\n                <div className=\"iconfont icon-quxiaoshoucang\" onClick={() => delStartItem(id)}>\r\n                    <div className=\"unstar\">取消收藏</div>\r\n                </div>\r\n            )\r\n        }\r\n        // 如果没收藏，显示收藏icon\r\n        else {\r\n\r\n            return (\r\n                <div className=\"iconfont icon-shoucang\" onClick={() => startItem(id)}>\r\n                    <div className=\"star\">收藏</div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n    // 收藏\r\n    const startItem = (id) => {\r\n        let oldarr = notes\r\n        let idarr = oldarr.map(item => { return item.id })\r\n        const index = idarr.indexOf(id)\r\n        if (index === -1) {\r\n            return\r\n        } else {\r\n            oldarr[index].isStar = 1\r\n            dispatch(changeNoteAction(oldarr))\r\n        }\r\n        \r\n    }\r\n    // 取消收藏\r\n    const delStartItem = (id) => {\r\n        let oldarr = notes\r\n        let idarr = oldarr.map(item => { return item.id })\r\n        const index = idarr.indexOf(id)\r\n        if (index === -1) {\r\n            return\r\n        } else {\r\n            oldarr[index].isStar = 0\r\n            dispatch(changeNoteAction(oldarr))\r\n        }\r\n        \r\n    }\r\n\r\n    // 删除\r\n    const deleteItem = (id,item) => {\r\n        let oldarr = notes\r\n        //把数组对象变成一个数组  只要关键的那个值(要唯一值才行)，如id\r\n        let idarr = oldarr.map(item => {\r\n            return item.id\r\n        })\r\n        //得到要找的这个对象在原来的数组中的位置\r\n        const index = idarr.indexOf(id)\r\n        if(index === -1){\r\n            return\r\n        }else{\r\n            //删除\r\n            oldarr.splice(index, 1)\r\n            dispatch(changeNoteAction(oldarr))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <SearchWrapper className=\"w360h100p\">\r\n                {/* 搜索框 */}\r\n                <div className=\"searchbox\">\r\n                    <input placeholder=\"搜索...\" ref={inputRef} autoFocus='autofocus' maxLength={16}></input>\r\n                    <span className=\"iconfont icon-icon_close_ungrand del\" onClick={() => delAll()}></span>\r\n                    <span className=\"iconfont icon-sousuo searchicon\" onClick={() => search()}></span>\r\n\r\n\r\n                </div>\r\n                {/* 结果区 */}\r\n\r\n                <ul>\r\n                    {\r\n                        data.map((item, index) => {\r\n                            return (\r\n                                <li className=\"item\" key={item.id} onClick={() => showDetail(item)}>\r\n                                    <div className=\"title\">\r\n                                        {item.title}\r\n                                    </div>\r\n                                    <i>{item.time}</i>\r\n                                    <div className=\"functionbtn\" >\r\n                                        {selectStar(item.id, item.isStar)}\r\n                                        <div className=\"iconfont icon-icon_delete\" onClick={() => deleteItem(item.id,item)}>\r\n                                            <div className=\"deletenote\">删除笔记</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            </SearchWrapper>\r\n            <ChildTitleWrapper >\r\n                <div className=\"childTitle\">{titleState}</div>\r\n                <Write data={showNotestate} />\r\n            </ChildTitleWrapper>\r\n            <NoResultWrapper noResult={noResult}>\r\n                <i className=\"iconfont icon-meiyoushuju\"></i>\r\n                <div>什么也没有</div>\r\n            </NoResultWrapper>\r\n        </>\r\n    )\r\n})\r\n","import styled from \"styled-components\";\r\n\r\nexport const TitleListWrapper = styled.div`\r\n    background-color: whitesmoke;\r\n  \r\n        .title {\r\n\r\n            font-size:26px;\r\n            color:#737373;\r\n            margin:20px;\r\n            margin-right:opx;\r\n        }\r\n        \r\n    ul {\r\n        overflow-y:scroll;\r\n        height:calc(100vh - 69.9px);\r\n    }\r\n    .item {\r\n        position: relative;\r\n        border-top: 1px solid #c2c2c2;\r\n        height: 60px;\r\n        padding:12px 80px 6px 24px;\r\n        cursor: pointer;\r\n        /* 笔记题目 */\r\n        .title{\r\n            width:200px;\r\n            font-size:18px;\r\n            white-space:nowrap;\r\n            overflow:hidden;\r\n            text-overflow: ellipsis;\r\n            margin: 0;\r\n        }\r\n        \r\n        /* 日期 */\r\n        i {\r\n            display:block;\r\n            margin-top:20px;\r\n            margin-left:130px;\r\n            color:gray;\r\n        }\r\n    }\r\n\r\n    .item:hover {\r\n        background-color:#c2c2c2;\r\n        color:white;\r\n\r\n        .title, i {\r\n            color:white;\r\n        }\r\n    }\r\n    /* 点击后变色 */\r\n    .focusItem{\r\n        background-color: #c2c2c2;\r\n    }\r\n    .functionbtn {\r\n        position:absolute;\r\n        display:none;\r\n        top:24px;\r\n        right:30px;\r\n        /* 收藏按钮 */\r\n        .icon-shoucang,.icon-quxiaoshoucang,.icon-icon_write{\r\n            margin-right:4px;\r\n        }\r\n        \r\n        .iconfont {\r\n            z-index:999;\r\n            font-size:24px;\r\n            text-align:center;\r\n            /* 提示删除和收藏 */\r\n            .star,.unstar,.deletenote,.editetitle {\r\n                display:none;\r\n                margin-top:5px;\r\n                position: absolute;\r\n                font-size:12px;\r\n                background-color: gray;\r\n                padding:2px;\r\n            }\r\n            .star::before{\r\n                left:10px;\r\n            }\r\n            .unstar::before{\r\n                left:20px;\r\n            }\r\n            .editetitle::before{\r\n                left:20px;\r\n            }\r\n            .deletenote::before{\r\n                left:21px;\r\n            }\r\n            .star::before,.unstar::before,.deletenote::before,.editetitle::before{\r\n                content:'';\r\n                position:absolute;\r\n                top:-6px;\r\n                width: 0;\r\n                height: 0;\r\n                border-left: 5px solid transparent;\r\n                border-right: 5px solid transparent;\r\n                border-bottom:7px solid gray;\r\n            }\r\n            .star {\r\n                width:26px;\r\n                left:24px\r\n            }\r\n            .unstar{\r\n                width:50px;\r\n                left:14px;\r\n            }\r\n            .editetitle{\r\n                width:50px;\r\n                left:-14px;\r\n            }\r\n            .deletenote {\r\n                width:60px;\r\n                left:40px;\r\n            }\r\n        }\r\n        /* 收藏和删除路过时，变色 */\r\n        .iconfont:hover {\r\n            color:#fa8a00;\r\n            .star,.deletenote,.unstar ,.editetitle{\r\n                color:white;\r\n            }\r\n        }\r\n        .icon-shoucang:hover .star,\r\n        .icon-quxiaoshoucang:hover .unstar,\r\n        .icon-icon_delete:hover .deletenote,\r\n        .icon-icon_write:hover .editetitle\r\n        {\r\n            display:block;\r\n        }\r\n        \r\n    }\r\n    \r\n    .item:hover .functionbtn {\r\n        display:float;\r\n    }\r\n    `\r\n\r\n\r\nexport const MaskWrapper = styled.div`\r\n    /* 遮罩 */\r\n    display:${props => props.flagSave};\r\n    width: 100%;\r\n    height: 100%;\r\n    position:absolute;\r\n    z-index:1000;\r\n    div{\r\n        position:absolute;\r\n        left:180px;\r\n        top:14px;\r\n        display:flex;\r\n        align-items:center;\r\n        \r\n    }\r\n    input{\r\n        background-color:transparent;\r\n        width:180px;\r\n        height: 40px;\r\n    }\r\n    span{\r\n        margin-left:4px;\r\n        background-color:transparent;\r\n        font-size:20px;\r\n    }\r\n    span:hover{\r\n        color:gray;\r\n    }\r\n    span:hover .savetitle{\r\n        display:block;\r\n    }\r\n\r\n    .savetitle {\r\n        display:none;\r\n        color:white;\r\n        margin-top:24px;\r\n        position: absolute;\r\n        font-size:12px;\r\n        background-color: gray;\r\n        padding:2px;\r\n        width:50px;\r\n        left:168px;\r\n    }\r\n    .savetitle:before{\r\n        left:21px;\r\n        content:'';\r\n        position:absolute;\r\n        top:-6px;\r\n        width: 0;\r\n        height: 0;\r\n        border-left: 5px solid transparent;\r\n        border-right: 5px solid transparent;\r\n        border-bottom:7px solid gray;\r\n    }\r\n    `\r\nexport const ChildTitleWrapper = styled.div`\r\ndisplay:flex;\r\nflex-direction:column;\r\n.childTitle{\r\n    height: 40px;\r\n    text-align:center;\r\n    font-size:30px;\r\n    font-weight:500;\r\n    line-height:40px;\r\n    margin-top:8px;\r\n}\r\n\r\n`\r\n\r\nexport const NoWrapper = styled.div`\r\n    display:${props => props.noResult};\r\n    position:absolute;\r\n    left: 160px;\r\n    top: 180px;\r\n    text-align:center;\r\n    i {\r\n        font-size:160px;\r\n        color: #f9b259;\r\n\r\n    }\r\n\r\n    div{\r\n        color:#f9b259;\r\n    }\r\n`","import React, { memo, useState, useRef, useEffect } from 'react'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { changeNote as changeNoteAction } from '@/store/actionCreater'\r\nimport { TitleListWrapper, MaskWrapper, ChildTitleWrapper, NoWrapper } from './style'\r\nimport Write from '@/components/write'\r\n\r\n\r\nexport default memo(function TitleList(props) {\r\n    const { starPage, title } = props;\r\n    const allData = useSelector(state => state.notes, shallowEqual)\r\n    let note = {}\r\n    // 制作【收藏页面】的list\r\n    let newarr = allData.filter((item) => item.isStar === 1)\r\n    const [showNotestate, setShowNoteState] = useState({})\r\n    // 设置【title】的状态【编辑】&【保存】\r\n    // const [editeTitlestate, setEditeTitleState] = useState('block')\r\n    const [SaveTitleState, setSaveTitleState] = useState('none')\r\n    const [idState, setIdState] = useState(0)\r\n    const [titleState, setTitleState] = useState('')\r\n    // 无结果的时候\r\n    const [noResult, setNoResult] = useState('none')\r\n    // 修改标题后的值\r\n    const inputRef = useRef('')\r\n    const dispatch = useDispatch()\r\n    // 选择是【收藏页面】还是【笔记本页面】\r\n    const data = starPage ? newarr : allData\r\n\r\n    // 选择是【收藏】还是【取消收藏】\r\n    const selectStar = (id, isStar) => {\r\n\r\n        // 如果收藏了，显示取消收藏icon\r\n        if (isStar === 1) {\r\n            return (\r\n                <div className=\"iconfont icon-quxiaoshoucang\" onClick={() => delStartItem(id)}>\r\n                    <div className=\"unstar\">取消收藏</div>\r\n                </div>\r\n            )\r\n        }\r\n        // 如果没收藏，显示收藏icon\r\n        else {\r\n\r\n            return (\r\n                <div className=\"iconfont icon-shoucang\" onClick={() => startItem(id)}>\r\n                    <div className=\"star\">收藏</div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n    // 点击每一项，显示详细内容\r\n    const showDetail = (item) => {\r\n        note = { ...item }\r\n        setShowNoteState(note)\r\n        setTitleState(item.title)\r\n\r\n    }\r\n    // 【编辑】=>【保存】\r\n    const editeTitle = (id) => {\r\n        setSaveTitleState('block')\r\n        setIdState(id)\r\n\r\n    }\r\n    const saveTitle = () => {\r\n        let oldarr = allData\r\n        // setEditeTitleState('block')\r\n        setSaveTitleState('none')\r\n        let newTitle = inputRef.current.value\r\n        //把数组对象变成一个数组  只要关键的那个值(要唯一值才行)，如id\r\n        let idarr = oldarr.map(item => {\r\n            return item.id\r\n        })\r\n        //得到要找的这个对象在原来的数组中的位置\r\n        const index = idarr.indexOf(idState)\r\n        // 如果没有改变，就不发生变化\r\n        if (newTitle === '' || newTitle === oldarr[index].title) { return }\r\n        else {\r\n            // 修改\r\n            oldarr[index].title = newTitle\r\n            //  派发\r\n            dispatch(changeNoteAction(oldarr))\r\n            inputRef.current.value = ''\r\n            setTitleState(oldarr[index].title)\r\n\r\n        }\r\n    }\r\n\r\n    // 删除\r\n    const deleteItem = (id) => {\r\n        let oldarr = allData\r\n        //把数组对象变成一个数组  只要关键的那个值(要唯一值才行)，如id\r\n        let idarr = oldarr.map(item => {\r\n            return item.id\r\n        })\r\n        //得到要找的这个对象在原来的数组中的位置\r\n        const index = idarr.indexOf(id)\r\n        //删除\r\n        oldarr.splice(index, 1)\r\n        dispatch(changeNoteAction(oldarr))\r\n    }\r\n\r\n    // 收藏\r\n    const startItem = (id) => {\r\n        let oldarr = allData\r\n        let idarr = oldarr.map(item => { return item.id })\r\n        const index = idarr.indexOf(id)\r\n        oldarr[index].isStar = 1\r\n        dispatch(changeNoteAction(oldarr))\r\n    }\r\n    // 取消收藏\r\n    const delStartItem = (id) => {\r\n        let oldarr = allData\r\n        let idarr = oldarr.map(item => { return item.id })\r\n        const index = idarr.indexOf(id)\r\n        oldarr[index].isStar = 0\r\n        dispatch(changeNoteAction(oldarr))\r\n    }\r\n    // 控制【没有页面】的显示与隐藏\r\n    useEffect(() => {\r\n        if (data[0] === undefined) {\r\n            setNoResult('block')\r\n        }\r\n    }, [data])\r\n    const selectNoPage = () => {\r\n        if (starPage) {\r\n            return (\r\n                <i className=\"iconfont icon-meiyoushoucang\"></i>\r\n                )\r\n            }\r\n            else {\r\n                return (\r\n                <i className=\"iconfont icon-meiyougengduo\"></i>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <MaskWrapper flagSave={SaveTitleState} >\r\n                <div>\r\n                    <input ref={inputRef} placeholder=\"输入标题\" maxLength={28}></input>\r\n                    <span className=\"iconfont icon-icon_finish_round\" onClick={() => saveTitle()}>\r\n                        <div className=\"savetitle\">保存标题</div></span>\r\n                </div>\r\n            </MaskWrapper>\r\n\r\n            <TitleListWrapper className=\"w360h100p\" flagSave={SaveTitleState} >\r\n                <div className=\"title\">{title}</div>\r\n                <ul>\r\n                    {\r\n                        data.map((item, index) => {\r\n                            return (\r\n\r\n                                <li className='item' key={item.id} onClick={() => showDetail(item)} >\r\n                                    <div className=\"title\">\r\n                                        {item.title}\r\n                                    </div>\r\n                                    <i>{item.date}</i>\r\n                                    <div className=\"functionbtn\" >\r\n                                        <div className=\"iconfont icon-icon_write\" onClick={() => editeTitle(item.id)}>\r\n                                            <div className=\"editetitle\">编辑标题</div>\r\n                                        </div>\r\n\r\n                                        {selectStar(item.id, item.isStar)}\r\n                                        <div className=\"iconfont icon-icon_delete\" onClick={() => deleteItem(item.id)}>\r\n                                            <div className=\"deletenote\">删除笔记</div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            </TitleListWrapper>\r\n            <ChildTitleWrapper >\r\n                <div className=\"childTitle\">{titleState}</div>\r\n                <Write data={showNotestate} />\r\n            </ChildTitleWrapper>\r\n            {/* 没有内容时显示的内容 */}\r\n            <NoWrapper noResult={noResult}>\r\n                {selectNoPage()}\r\n                <div>什么也没有</div>\r\n            </NoWrapper>\r\n\r\n        </>\r\n    )\r\n})\r\n","import React, { memo } from 'react'\r\nimport TitleList from '@/components/titleList'\r\n\r\nexport default memo(function Notes() {\r\n\r\n    return (\r\n        <TitleList  title=\"笔记\"></TitleList>\r\n    )\r\n})\r\n","import React, { memo} from 'react'\r\nimport TitleList from '@/components/titleList'\r\nexport default memo(function Stars() {\r\n\r\n    return (\r\n        <TitleList title=\"收藏\" starPage=\"true\" ></TitleList>\r\n    )\r\n})\r\n\r\n","import styled from \"styled-components\";\r\nexport const WriteBarWrapper = styled.div`\r\n    .title{\r\n        height: 40px;\r\n        width:calc(100vw  - 100px);\r\n        text-align:center;\r\n        font-size:30px;\r\n        font-weight:500;\r\n        line-height:40px;\r\n        margin-top:8px;\r\n        margin-left:10px;\r\n\r\n    }\r\n    .bf-container{\r\n        height:calc(100vh - 60px - 20px);\r\n    }\r\n    .article p{\r\n    min-height: 1em;\r\n    }\r\n\r\n    .saved{\r\n        display:${props => props.showSave};\r\n        position:absolute;\r\n        left: 50%;\r\n        top:50%;\r\n        background-color:gray;\r\n        color:white;\r\n        padding:6px;\r\n        border-radius:4px;\r\n    }\r\n`\r\n\r\nexport const SaveWrapper = styled.div`\r\n    position:absolute;\r\n    background-color: red;\r\n    right: 14%;\r\n    top:5%;\r\n    cursor: pointer;\r\n\r\n    .iconfont {\r\n        position:absolute;\r\n        font-size:26px;\r\n        \r\n        div{\r\n            display:none;\r\n            position:absolute;\r\n            left:-5px;\r\n            bottom:-22px;\r\n            padding:2px;\r\n            background-color: gray;\r\n            width:34px;\r\n            font-size:12px;\r\n            text-align:center;\r\n            color:white;\r\n        }\r\n        div:before{\r\n            content:'';\r\n            position:absolute;\r\n            top: -6px;\r\n            left: 14px;\r\n            width:0;\r\n            height: 0;\r\n            border-left: 5px solid transparent;\r\n            border-right: 5px solid transparent;\r\n            border-bottom:7px solid gray;\r\n            \r\n        }\r\n    }\r\n    .iconfont:hover div{\r\n        display:block;\r\n    }\r\n    .iconfont:hover{\r\n        color:#fa8a00;\r\n    }\r\n`","import React from 'react'\r\n// 引入编辑器组件\r\nimport BraftEditor from 'braft-editor'\r\n// 引入编辑器样式\r\nimport 'braft-editor/dist/index.css'\r\nimport 'braft-extensions/dist/code-highlighter.css'\r\nimport { WriteBarWrapper, SaveWrapper } from './style'\r\nimport {\r\n    getDate,\r\n    dataFrom,\r\n} from '@/utl/tools'\r\nimport { addNote } from '@/store/actionCreater'\r\nimport store from '@/store'\r\nexport default class WriteBar extends React.Component {\r\n\r\n    state = {\r\n        editorState: BraftEditor.createEditorState('<p></p>'),\r\n        showSave: 'none'\r\n    }\r\n    excludeControls = ['media', 'link', 'text-indent', 'emoji', 'headings', 'superscript', 'fullscreen', 'subscript', 'clear', 'remove-styles']\r\n    // 节流阀，防止定时器同时间开多个\r\n    flag = 0\r\n    // 编辑内容触发\r\n    handleChange = (editorState) => {\r\n        this.setState({ editorState })\r\n    }\r\n\r\n\r\n    //保存\r\n    submitContent = () => {\r\n        // 在编辑器获得焦点时按下ctrl+s会执行此方法\r\n        if (this.flag === 0) {\r\n\r\n            this.flag = 1;\r\n            // 编辑器内容提交到服务端之前，可直接调用editorState.toHTML()来获取HTML格式的内容\r\n            const htmlContent = this.state.editorState.toHTML()\r\n            let title = this.titleRef.value\r\n            if (title === '') {\r\n                title = '未命名标题'\r\n                this.titleRef.value = title\r\n            }\r\n            const data = dataFrom(title, htmlContent, getDate())\r\n            store.dispatch(addNote(data))\r\n            this.setState({ showSave: 'block' })\r\n            setTimeout(() => {\r\n                this.setState({ showSave: 'none' })\r\n                this.flag = 0\r\n            }, 1500)\r\n        }\r\n\r\n    }\r\n    componentWillUnmount = () => {\r\n        this.setState = (state, callback) => {\r\n            return;\r\n        };\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <SaveWrapper onClick={this.submitContent}>\r\n                    <i className=\"iconfont icon-icon_rule\"><div>保存</div></i>\r\n                    \r\n                </SaveWrapper>\r\n                <WriteBarWrapper showSave={this.state.showSave}>\r\n                    <input placeholder=\"输入标题\" className=\"title\" ref={e => this.titleRef = e} autoFocus=\"autofocus\" maxLength={28} ></input>\r\n                    <BraftEditor value={this.state.editorState}\r\n                        onChange={this.handleChange}\r\n                        excludeControls={this.excludeControls}\r\n                        contentStyle={{ height: 'calc(100vh - 60px - 48px)', width: 'calc(100vw  - 80px)', boxShadow: 'inset 0 1px 3px rgba(0,0,0,.1)' }}\r\n                        id=\"editor-with-code-highlighter\"\r\n                        onSave={this.submitContent}\r\n                    />\r\n                    <div className=\"saved iconfont icon-icon_finish_round\" >已保存</div>\r\n                </WriteBarWrapper>\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n","import Search from '@/pages/search';\r\nimport Notes from '@/pages/notes';\r\nimport Stars from '@/pages/stars';\r\nimport WriteBar from '@/pages/writeBar';\r\nimport { Redirect } from 'react-router-dom';\r\nconst  router = [\r\n    {\r\n        path: \"/\",\r\n        exact: true,\r\n        render: () => (\r\n            <Redirect to=\"/notes\" />\r\n        )\r\n    },\r\n    {\r\n        path: \"/search\",\r\n        component:Search,\r\n    },\r\n    {\r\n        path: \"/notes\",\r\n        component: Notes,\r\n    },\r\n    {\r\n        path: \"/collection\",\r\n        component: Stars,\r\n    },\r\n    {\r\n        path: \"/addnote\",\r\n        component: WriteBar,\r\n    },\r\n    \r\n]\r\nexport default router;","import styled from \"styled-components\"\r\n\r\nexport const HeaderWrapper = styled.div`\r\n    height:100vh;\r\n    width:73px;\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:space-around;\r\n    align-items:center;\r\n    background-color: #c2c2c2;\r\n\r\n    .btn {\r\n        position:relative;\r\n        width:38px;\r\n        height: 38px;\r\n        font-size:30px;\r\n        text-align:center;\r\n        line-height:38px;\r\n        background-color: #fff;\r\n        border-color:#e9e9e9;\r\n        border-radius:50%;\r\n        cursor:pointer;\r\n    }\r\n    .btn:nth-child(5){\r\n        text-align:left;\r\n    }\r\n\r\n    .active {\r\n        background-color:#f9b259;\r\n        color:white;\r\n    }\r\n    .btn:hover{\r\n         background-color:#f9e459;\r\n        color:white;\r\n    }\r\n/* 文字提示 */\r\n    \r\n    .tip {\r\n        display:none;\r\n        z-index:99;\r\n        position:absolute;\r\n        left:50px;\r\n        top:9px;\r\n        background-color:gray;\r\n        color:white;\r\n        line-height:20px;\r\n        font-size:12px;\r\n        width: 60px;\r\n        height: 20px;\r\n        border-radius:4px;\r\n        \r\n    }\r\n    .tip:before{\r\n        content:'';\r\n        position:absolute;\r\n        left:-9px;\r\n        top:4px;\r\n\r\n        width: 0;\r\n        height: 0;\r\n        border-top: 5px solid transparent;\r\n        border-right: 10px solid gray;\r\n        border-bottom: 5px solid transparent;\r\n\r\n    }\r\n    .btn:hover .tip {\r\n        display:inline-block;\r\n    }\r\n`","import React, { memo } from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {\r\n    HeaderWrapper\r\n} from './style'\r\n\r\nexport default memo(function Header() {\r\n    return (\r\n        <HeaderWrapper>\r\n            <NavLink to=\"/addnote\" className=\"btn iconfont icon-icon_plus\">\r\n                <span className=\"tip\">新建笔记</span>\r\n                </NavLink>\r\n            <NavLink to=\"/search\" className=\"btn iconfont icon-icon_search\">\r\n                <span className=\"tip\">搜索</span>\r\n                </NavLink>\r\n            <NavLink to=\"/notes\" className=\"btn iconfont icon-xuexi\">\r\n                <span className=\"tip\">笔记本</span>\r\n                </NavLink>\r\n            <NavLink to=\"/collection\" className=\"btn iconfont icon-biaoqian\">\r\n                <span className=\"tip\">收藏</span>\r\n                </NavLink> \r\n        </HeaderWrapper> \r\n    )\r\n})\r\n","import { renderRoutes } from 'react-router-config'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport routes from './router'\nimport \"./App.css\"\nimport Header from '@/components/header'\nfunction App() {\n  \n  return (\n    <Provider store={store}>\n    <BrowserRouter >\n      <div className=\"appbox\">\n        <Header />\n        {renderRoutes(routes)}\n\n      </div>\n    </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from './App'\r\nimport \"./asset/css/reset.css\";\r\nReactDom.render(<App />, document.getElementById('root'))"],"sourceRoot":""}